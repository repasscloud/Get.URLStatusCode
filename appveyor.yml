# version format
version: 2.0.2.{build}

# branches to build
branches:
  # whitelist
  only:
    - master
  # blacklist
  except:
    - gh-pages

# Do not build on tags (GitHub, Bitbucket, GitLab, Gitea)
skip_tags: true

# Skipping commits affecting specific files (GitHub only). More details here: /docs/appveyor-yml
skip_commits:
  files:
    - docs/*
    - '**/*.html'
    - README.md
    - .github/*
  message: /updated? readme.*s/

# Maximum number of concurrent jobs for the project
max_jobs: 1


#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2019

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# clone directory
clone_folder: C:\Projects\Get.URLStatusCode

# fetch repository as zip archive
shallow_clone: true                 # default is "false"

# set clone depth
clone_depth: 5                      # clone entire repository history if not defined

# this is how to allow failing jobs in the matrix
matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.
  allow_failures:
    - platform: x64
      configuration: Release

# environment variables
environment:
  NUGET_API_KEY:
    secure: vwJBhbWY9NwSAeYw7iU4i3RjqfVkegrXFyFAJB/uFIYtp5pz0Vw5Htiyfa83v+dg
# APPVEYOR_RDP_PASSWORD:
#   secure: Ps2KNyw17/1mtAm9/5/miw==

# scripts that run after cloning repository
install:
#  - ps: .\build.ps1   #~> builds the module on the CI server
#  - ps: .\install.ps1   #~> installs the module locally on the CI server
#  - ps: Import-Module -Name Get.URLStatusCode  # Imports the module for testing
  - ps: |
#      Start-Sleep -Seconds 15
#      Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.208 -Force
#      Install-Module -Name PowerShellGet -Force
      "Git version: $(git.exe --version)"
      "PSVersion:   $($PSVersionTable.PSVersion), build: $($PSVersionTable.BuildVersion), clr version: $($PSVersionTable.ClrVersion)"
      "Host name:   $($Host.Name)"

build_script:
  - ps: ./build.ps1

test_script:
  - ps: ./test.ps1

# on successful build
on_success:
  - ps: |
      Write-Host "Build Number: " -ForegroundColor Yellow -NoNewLine
      Write-Host $Env:APPVEYOR_BUILD_NUMBER
      Write-Host "Build ID: " -ForegroundColor Yellow -NoNewLine
      Write-Host $env:APPVEYOR_BUILD_ID
      Write-Host "Build Version: " -ForegroundColor Yellow -NoNewLine
      Write-Host $env:APPVEYOR_BUILD_VERSION
      Write-Host "Repo Commit: " -ForegroundColor Yellow -NoNewLine
      Write-Host $Env:APPVEYOR_REPO_COMMIT
      Write-Host "Repo Branch: " -ForegroundColor Yellow -NoNewLine
      Write-Host $Env:APPVEYOR_REPO_BRANCH
      Write-Host "Job Number: " -ForegroundColor Yellow -NoNewLine
      Write-Host $Env:APPVEYOR_JOB_NUMBER

# on build failure
on_failure:
  - ps: Write-Host -ForegroundColor Red 'Build failed :-('

# after build failure or success
on_finish:
  - ps: .\deploy.ps1
# - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
